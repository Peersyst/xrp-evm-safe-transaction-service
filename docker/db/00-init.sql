--
-- PostgreSQL database dump
--

-- Dumped from database version 13.11
-- Dumped by pg_dump version 14.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: authtoken_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.authtoken_token (
    key character varying(40) NOT NULL,
    created timestamp with time zone NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.authtoken_token OWNER TO postgres;

--
-- Name: contracts_contract; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contracts_contract (
    address bytea NOT NULL,
    name character varying(200) NOT NULL,
    contract_abi_id bigint,
    display_name character varying(200) NOT NULL,
    logo character varying(100) NOT NULL,
    trusted_for_delegate_call boolean NOT NULL
);


ALTER TABLE public.contracts_contract OWNER TO postgres;

--
-- Name: contracts_contractabi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contracts_contractabi (
    id bigint NOT NULL,
    abi jsonb NOT NULL,
    description character varying(200) NOT NULL,
    relevance smallint NOT NULL,
    abi_hash bytea
);


ALTER TABLE public.contracts_contractabi OWNER TO postgres;

--
-- Name: contracts_contractabi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.contracts_contractabi ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contracts_contractabi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_clockedschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_clockedschedule (
    id integer NOT NULL,
    clocked_time timestamp with time zone NOT NULL
);


ALTER TABLE public.django_celery_beat_clockedschedule OWNER TO postgres;

--
-- Name: django_celery_beat_clockedschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_clockedschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_clockedschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_crontabschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_crontabschedule (
    id integer NOT NULL,
    minute character varying(240) NOT NULL,
    hour character varying(96) NOT NULL,
    day_of_week character varying(64) NOT NULL,
    day_of_month character varying(124) NOT NULL,
    month_of_year character varying(64) NOT NULL,
    timezone character varying(63) NOT NULL
);


ALTER TABLE public.django_celery_beat_crontabschedule OWNER TO postgres;

--
-- Name: django_celery_beat_crontabschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_crontabschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_crontabschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_intervalschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_intervalschedule (
    id integer NOT NULL,
    every integer NOT NULL,
    period character varying(24) NOT NULL
);


ALTER TABLE public.django_celery_beat_intervalschedule OWNER TO postgres;

--
-- Name: django_celery_beat_intervalschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_intervalschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_intervalschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_periodictask; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_periodictask (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    task character varying(200) NOT NULL,
    args text NOT NULL,
    kwargs text NOT NULL,
    queue character varying(200),
    exchange character varying(200),
    routing_key character varying(200),
    expires timestamp with time zone,
    enabled boolean NOT NULL,
    last_run_at timestamp with time zone,
    total_run_count integer NOT NULL,
    date_changed timestamp with time zone NOT NULL,
    description text NOT NULL,
    crontab_id integer,
    interval_id integer,
    solar_id integer,
    one_off boolean NOT NULL,
    start_time timestamp with time zone,
    priority integer,
    headers text NOT NULL,
    clocked_id integer,
    expire_seconds integer,
    CONSTRAINT django_celery_beat_periodictask_expire_seconds_check CHECK ((expire_seconds >= 0)),
    CONSTRAINT django_celery_beat_periodictask_priority_check CHECK ((priority >= 0)),
    CONSTRAINT django_celery_beat_periodictask_total_run_count_check CHECK ((total_run_count >= 0))
);


ALTER TABLE public.django_celery_beat_periodictask OWNER TO postgres;

--
-- Name: django_celery_beat_periodictask_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_periodictask ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_periodictask_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_periodictasks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_periodictasks (
    ident smallint NOT NULL,
    last_update timestamp with time zone NOT NULL
);


ALTER TABLE public.django_celery_beat_periodictasks OWNER TO postgres;

--
-- Name: django_celery_beat_solarschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_solarschedule (
    id integer NOT NULL,
    event character varying(24) NOT NULL,
    latitude numeric(9,6) NOT NULL,
    longitude numeric(9,6) NOT NULL
);


ALTER TABLE public.django_celery_beat_solarschedule OWNER TO postgres;

--
-- Name: django_celery_beat_solarschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_solarschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_solarschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: django_site; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE public.django_site OWNER TO postgres;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_site ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_erc20transfer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_erc20transfer (
    id bigint NOT NULL,
    address bytea NOT NULL,
    _from bytea NOT NULL,
    "to" bytea NOT NULL,
    log_index integer NOT NULL,
    value numeric(79,0) NOT NULL,
    ethereum_tx_id bytea NOT NULL,
    block_number integer NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    CONSTRAINT history_erc20transfer_block_number_check CHECK ((block_number >= 0)),
    CONSTRAINT history_erc20transfer_log_index_check CHECK ((log_index >= 0))
);


ALTER TABLE public.history_erc20transfer OWNER TO postgres;

--
-- Name: history_erc20transfer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_erc20transfer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_erc20transfer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_erc721transfer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_erc721transfer (
    id bigint NOT NULL,
    address bytea NOT NULL,
    _from bytea NOT NULL,
    "to" bytea NOT NULL,
    log_index integer NOT NULL,
    token_id numeric(79,0) NOT NULL,
    ethereum_tx_id bytea NOT NULL,
    block_number integer NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    CONSTRAINT history_erc721transfer_block_number_check CHECK ((block_number >= 0)),
    CONSTRAINT history_erc721transfer_log_index_check CHECK ((log_index >= 0))
);


ALTER TABLE public.history_erc721transfer OWNER TO postgres;

--
-- Name: history_erc721transfer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_erc721transfer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_erc721transfer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_ethereumblock; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_ethereumblock (
    number integer NOT NULL,
    gas_limit numeric(79,0) NOT NULL,
    gas_used numeric(79,0) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    block_hash bytea NOT NULL,
    parent_hash bytea NOT NULL,
    confirmed boolean NOT NULL,
    CONSTRAINT history_ethereumblock_number_check CHECK ((number >= 0))
);


ALTER TABLE public.history_ethereumblock OWNER TO postgres;

--
-- Name: history_ethereumtx; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_ethereumtx (
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    tx_hash bytea NOT NULL,
    gas_used numeric(79,0),
    status integer,
    transaction_index integer,
    _from bytea,
    gas numeric(79,0) NOT NULL,
    gas_price numeric(79,0) NOT NULL,
    data bytea,
    nonce numeric(79,0) NOT NULL,
    "to" bytea,
    value numeric(79,0) NOT NULL,
    block_id integer,
    logs jsonb[],
    max_fee_per_gas numeric(79,0),
    max_priority_fee_per_gas numeric(79,0),
    type smallint NOT NULL,
    CONSTRAINT history_ethereumtx_transaction_index_check CHECK ((transaction_index >= 0)),
    CONSTRAINT history_ethereumtx_type_check CHECK ((type >= 0))
);


ALTER TABLE public.history_ethereumtx OWNER TO postgres;

--
-- Name: history_indexingstatus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_indexingstatus (
    indexing_type smallint NOT NULL,
    block_number integer NOT NULL,
    CONSTRAINT history_indexingstatus_block_number_check CHECK ((block_number >= 0)),
    CONSTRAINT history_indexingstatus_indexing_type_check CHECK ((indexing_type >= 0))
);


ALTER TABLE public.history_indexingstatus OWNER TO postgres;

--
-- Name: history_internaltx; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_internaltx (
    id bigint NOT NULL,
    _from bytea,
    gas numeric(79,0) NOT NULL,
    data bytea,
    "to" bytea,
    value numeric(79,0) NOT NULL,
    gas_used numeric(79,0) NOT NULL,
    contract_address bytea,
    code bytea,
    output bytea,
    refund_address bytea,
    tx_type smallint NOT NULL,
    call_type smallint,
    trace_address character varying(600) NOT NULL,
    error character varying(200),
    ethereum_tx_id bytea NOT NULL,
    block_number integer NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    CONSTRAINT history_internaltx_block_number_check CHECK ((block_number >= 0)),
    CONSTRAINT history_internaltx_call_type_check CHECK ((call_type >= 0)),
    CONSTRAINT history_internaltx_tx_type_check CHECK ((tx_type >= 0))
);


ALTER TABLE public.history_internaltx OWNER TO postgres;

--
-- Name: history_internaltx_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_internaltx ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_internaltx_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_internaltxdecoded; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_internaltxdecoded (
    internal_tx_id bigint NOT NULL,
    function_name character varying(256) NOT NULL,
    arguments jsonb NOT NULL,
    processed boolean NOT NULL
);


ALTER TABLE public.history_internaltxdecoded OWNER TO postgres;

--
-- Name: history_moduletransaction; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_moduletransaction (
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    internal_tx_id bigint NOT NULL,
    safe bytea NOT NULL,
    module bytea NOT NULL,
    "to" bytea NOT NULL,
    value numeric(79,0) NOT NULL,
    data bytea,
    operation smallint NOT NULL,
    failed boolean NOT NULL,
    CONSTRAINT history_moduletransaction_operation_check CHECK ((operation >= 0))
);


ALTER TABLE public.history_moduletransaction OWNER TO postgres;

--
-- Name: history_multisigconfirmation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_multisigconfirmation (
    id bigint NOT NULL,
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    owner bytea NOT NULL,
    multisig_transaction_id bytea,
    signature character varying(5000),
    multisig_transaction_hash bytea,
    ethereum_tx_id bytea,
    signature_type smallint NOT NULL,
    CONSTRAINT history_multisigconfirmation_signature_type_check CHECK ((signature_type >= 0))
);


ALTER TABLE public.history_multisigconfirmation OWNER TO postgres;

--
-- Name: history_multisigconfirmation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_multisigconfirmation ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_multisigconfirmation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_multisigtransaction; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_multisigtransaction (
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    safe_tx_hash bytea NOT NULL,
    safe bytea NOT NULL,
    "to" bytea,
    value numeric(79,0) NOT NULL,
    data bytea,
    operation smallint NOT NULL,
    safe_tx_gas numeric(79,0) NOT NULL,
    base_gas numeric(79,0) NOT NULL,
    gas_price numeric(79,0) NOT NULL,
    gas_token bytea,
    refund_receiver bytea,
    nonce numeric(79,0) NOT NULL,
    signatures bytea,
    ethereum_tx_id bytea,
    failed boolean,
    origin jsonb NOT NULL,
    trusted boolean NOT NULL,
    CONSTRAINT history_multisigtransaction_operation_check CHECK ((operation >= 0))
);


ALTER TABLE public.history_multisigtransaction OWNER TO postgres;

--
-- Name: history_proxyfactory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_proxyfactory (
    address bytea NOT NULL,
    initial_block_number integer NOT NULL,
    tx_block_number integer
);


ALTER TABLE public.history_proxyfactory OWNER TO postgres;

--
-- Name: history_safecontract; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_safecontract (
    address bytea NOT NULL,
    ethereum_tx_id bytea NOT NULL
);


ALTER TABLE public.history_safecontract OWNER TO postgres;

--
-- Name: history_safecontractdelegate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_safecontractdelegate (
    id bigint NOT NULL,
    delegate bytea NOT NULL,
    delegator bytea NOT NULL,
    label character varying(50) NOT NULL,
    read boolean NOT NULL,
    write boolean NOT NULL,
    safe_contract_id bytea
);


ALTER TABLE public.history_safecontractdelegate OWNER TO postgres;

--
-- Name: history_safecontractdelegate_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_safecontractdelegate ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_safecontractdelegate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: history_safelaststatus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_safelaststatus (
    address bytea NOT NULL,
    owners bytea[] NOT NULL,
    threshold numeric(79,0) NOT NULL,
    nonce numeric(79,0) NOT NULL,
    master_copy bytea NOT NULL,
    fallback_handler bytea NOT NULL,
    guard bytea,
    enabled_modules bytea[] NOT NULL,
    internal_tx_id bigint NOT NULL
);


ALTER TABLE public.history_safelaststatus OWNER TO postgres;

--
-- Name: history_safemastercopy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_safemastercopy (
    address bytea NOT NULL,
    initial_block_number integer NOT NULL,
    tx_block_number integer,
    version character varying(20) NOT NULL,
    deployer character varying(50) NOT NULL,
    l2 boolean NOT NULL
);


ALTER TABLE public.history_safemastercopy OWNER TO postgres;

--
-- Name: history_safestatus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_safestatus (
    internal_tx_id bigint NOT NULL,
    address bytea NOT NULL,
    owners bytea[] NOT NULL,
    threshold numeric(79,0) NOT NULL,
    nonce numeric(79,0) NOT NULL,
    master_copy bytea NOT NULL,
    enabled_modules bytea[] NOT NULL,
    fallback_handler bytea NOT NULL,
    guard bytea
);


ALTER TABLE public.history_safestatus OWNER TO postgres;

--
-- Name: history_webhook; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.history_webhook (
    id bigint NOT NULL,
    address bytea,
    url character varying(255) NOT NULL,
    new_confirmation boolean NOT NULL,
    pending_multisig_transaction boolean NOT NULL,
    new_executed_multisig_transaction boolean NOT NULL,
    new_incoming_transaction boolean NOT NULL,
    new_safe boolean NOT NULL,
    new_module_transaction boolean NOT NULL,
    new_outgoing_transaction boolean NOT NULL,
    "authorization" character varying(500)
);


ALTER TABLE public.history_webhook OWNER TO postgres;

--
-- Name: history_webhook_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.history_webhook ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.history_webhook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: notifications_firebasedevice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications_firebasedevice (
    uuid uuid NOT NULL,
    cloud_messaging_token character varying(200),
    build_number integer NOT NULL,
    bundle character varying(100) NOT NULL,
    device_type smallint NOT NULL,
    version character varying(50) NOT NULL,
    CONSTRAINT notifications_firebasedevice_build_number_check CHECK ((build_number >= 0)),
    CONSTRAINT notifications_firebasedevice_device_type_check CHECK ((device_type >= 0))
);


ALTER TABLE public.notifications_firebasedevice OWNER TO postgres;

--
-- Name: notifications_firebasedevice_safes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications_firebasedevice_safes (
    id bigint NOT NULL,
    firebasedevice_id uuid NOT NULL,
    safecontract_id bytea NOT NULL
);


ALTER TABLE public.notifications_firebasedevice_safes OWNER TO postgres;

--
-- Name: notifications_firebasedevice_safes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications_firebasedevice_safes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_firebasedevice_safes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: notifications_firebasedeviceowner; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications_firebasedeviceowner (
    id bigint NOT NULL,
    owner bytea NOT NULL,
    firebase_device_id uuid NOT NULL
);


ALTER TABLE public.notifications_firebasedeviceowner OWNER TO postgres;

--
-- Name: notifications_firebasedeviceowner_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications_firebasedeviceowner ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_firebasedeviceowner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: safe_messages_safemessage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.safe_messages_safemessage (
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    message_hash bytea NOT NULL,
    safe bytea NOT NULL,
    message jsonb NOT NULL,
    proposed_by bytea NOT NULL,
    safe_app_id integer,
    CONSTRAINT safe_messages_safemessage_safe_app_id_check CHECK ((safe_app_id >= 0))
);


ALTER TABLE public.safe_messages_safemessage OWNER TO postgres;

--
-- Name: safe_messages_safemessageconfirmation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.safe_messages_safemessageconfirmation (
    id bigint NOT NULL,
    created timestamp with time zone NOT NULL,
    modified timestamp with time zone NOT NULL,
    owner bytea NOT NULL,
    signature character varying(5000) NOT NULL,
    signature_type smallint NOT NULL,
    safe_message_id bytea,
    CONSTRAINT safe_messages_safemessageconfirmation_signature_type_check CHECK ((signature_type >= 0))
);


ALTER TABLE public.safe_messages_safemessageconfirmation OWNER TO postgres;

--
-- Name: safe_messages_safemessageconfirmation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.safe_messages_safemessageconfirmation ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.safe_messages_safemessageconfirmation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tokens_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tokens_token (
    address bytea NOT NULL,
    name character varying(60) NOT NULL,
    symbol character varying(60) NOT NULL,
    decimals smallint,
    trusted boolean NOT NULL,
    spam boolean NOT NULL,
    events_bugged boolean NOT NULL,
    logo character varying(100) NOT NULL,
    copy_price bytea,
    CONSTRAINT tokens_token_decimals_check CHECK ((decimals >= 0))
);


ALTER TABLE public.tokens_token OWNER TO postgres;

--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (1, 'Can add log entry', 1, 'add_logentry');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (2, 'Can change log entry', 1, 'change_logentry');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (3, 'Can delete log entry', 1, 'delete_logentry');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (4, 'Can view log entry', 1, 'view_logentry');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (5, 'Can add permission', 2, 'add_permission');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (6, 'Can change permission', 2, 'change_permission');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (7, 'Can delete permission', 2, 'delete_permission');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (8, 'Can view permission', 2, 'view_permission');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (9, 'Can add group', 3, 'add_group');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (10, 'Can change group', 3, 'change_group');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (11, 'Can delete group', 3, 'delete_group');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (12, 'Can view group', 3, 'view_group');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (13, 'Can add user', 4, 'add_user');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (14, 'Can change user', 4, 'change_user');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (15, 'Can delete user', 4, 'delete_user');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (16, 'Can view user', 4, 'view_user');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (17, 'Can add content type', 5, 'add_contenttype');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (18, 'Can change content type', 5, 'change_contenttype');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (19, 'Can delete content type', 5, 'delete_contenttype');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (20, 'Can view content type', 5, 'view_contenttype');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (21, 'Can add session', 6, 'add_session');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (22, 'Can change session', 6, 'change_session');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (23, 'Can delete session', 6, 'delete_session');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (24, 'Can view session', 6, 'view_session');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (25, 'Can add site', 7, 'add_site');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (26, 'Can change site', 7, 'change_site');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (27, 'Can delete site', 7, 'delete_site');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (28, 'Can view site', 7, 'view_site');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (29, 'Can add Token', 8, 'add_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (30, 'Can change Token', 8, 'change_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (31, 'Can delete Token', 8, 'delete_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (32, 'Can view Token', 8, 'view_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (33, 'Can add token', 9, 'add_tokenproxy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (34, 'Can change token', 9, 'change_tokenproxy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (35, 'Can delete token', 9, 'delete_tokenproxy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (36, 'Can view token', 9, 'view_tokenproxy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (37, 'Can add contract abi', 10, 'add_contractabi');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (38, 'Can change contract abi', 10, 'change_contractabi');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (39, 'Can delete contract abi', 10, 'delete_contractabi');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (40, 'Can view contract abi', 10, 'view_contractabi');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (41, 'Can add contract', 11, 'add_contract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (42, 'Can change contract', 11, 'change_contract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (43, 'Can delete contract', 11, 'delete_contract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (44, 'Can view contract', 11, 'view_contract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (45, 'Can add multisig transaction', 12, 'add_multisigtransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (46, 'Can change multisig transaction', 12, 'change_multisigtransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (47, 'Can delete multisig transaction', 12, 'delete_multisigtransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (48, 'Can view multisig transaction', 12, 'view_multisigtransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (49, 'Can create trusted transactions', 12, 'create_trusted');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (50, 'Can add multisig confirmation', 13, 'add_multisigconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (51, 'Can change multisig confirmation', 13, 'change_multisigconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (52, 'Can delete multisig confirmation', 13, 'delete_multisigconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (53, 'Can view multisig confirmation', 13, 'view_multisigconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (54, 'Can add ethereum block', 14, 'add_ethereumblock');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (55, 'Can change ethereum block', 14, 'change_ethereumblock');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (56, 'Can delete ethereum block', 14, 'delete_ethereumblock');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (57, 'Can view ethereum block', 14, 'view_ethereumblock');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (58, 'Can add ethereum tx', 15, 'add_ethereumtx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (59, 'Can change ethereum tx', 15, 'change_ethereumtx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (60, 'Can delete ethereum tx', 15, 'delete_ethereumtx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (61, 'Can view ethereum tx', 15, 'view_ethereumtx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (62, 'Can add internal tx', 16, 'add_internaltx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (63, 'Can change internal tx', 16, 'change_internaltx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (64, 'Can delete internal tx', 16, 'delete_internaltx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (65, 'Can view internal tx', 16, 'view_internaltx');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (66, 'Can add proxy factory', 17, 'add_proxyfactory');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (67, 'Can change proxy factory', 17, 'change_proxyfactory');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (68, 'Can delete proxy factory', 17, 'delete_proxyfactory');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (69, 'Can view proxy factory', 17, 'view_proxyfactory');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (70, 'Can add safe master copy', 18, 'add_safemastercopy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (71, 'Can change safe master copy', 18, 'change_safemastercopy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (72, 'Can delete safe master copy', 18, 'delete_safemastercopy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (73, 'Can view safe master copy', 18, 'view_safemastercopy');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (74, 'Can add internal tx decoded', 19, 'add_internaltxdecoded');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (75, 'Can change internal tx decoded', 19, 'change_internaltxdecoded');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (76, 'Can delete internal tx decoded', 19, 'delete_internaltxdecoded');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (77, 'Can view internal tx decoded', 19, 'view_internaltxdecoded');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (78, 'Can add safe contract', 20, 'add_safecontract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (79, 'Can change safe contract', 20, 'change_safecontract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (80, 'Can delete safe contract', 20, 'delete_safecontract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (81, 'Can view safe contract', 20, 'view_safecontract');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (82, 'Can add safe status', 21, 'add_safestatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (83, 'Can change safe status', 21, 'change_safestatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (84, 'Can delete safe status', 21, 'delete_safestatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (85, 'Can view safe status', 21, 'view_safestatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (86, 'Can add web hook', 22, 'add_webhook');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (87, 'Can change web hook', 22, 'change_webhook');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (88, 'Can delete web hook', 22, 'delete_webhook');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (89, 'Can view web hook', 22, 'view_webhook');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (90, 'Can add module transaction', 23, 'add_moduletransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (91, 'Can change module transaction', 23, 'change_moduletransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (92, 'Can delete module transaction', 23, 'delete_moduletransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (93, 'Can view module transaction', 23, 'view_moduletransaction');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (94, 'Can add safe contract delegate', 24, 'add_safecontractdelegate');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (95, 'Can change safe contract delegate', 24, 'change_safecontractdelegate');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (96, 'Can delete safe contract delegate', 24, 'delete_safecontractdelegate');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (97, 'Can view safe contract delegate', 24, 'view_safecontractdelegate');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (98, 'Can add ERC20 Transfer', 25, 'add_erc20transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (99, 'Can change ERC20 Transfer', 25, 'change_erc20transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (100, 'Can delete ERC20 Transfer', 25, 'delete_erc20transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (101, 'Can view ERC20 Transfer', 25, 'view_erc20transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (102, 'Can add ERC721 Transfer', 26, 'add_erc721transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (103, 'Can change ERC721 Transfer', 26, 'change_erc721transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (104, 'Can delete ERC721 Transfer', 26, 'delete_erc721transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (105, 'Can view ERC721 Transfer', 26, 'view_erc721transfer');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (106, 'Can add safe last status', 27, 'add_safelaststatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (107, 'Can change safe last status', 27, 'change_safelaststatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (108, 'Can delete safe last status', 27, 'delete_safelaststatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (109, 'Can view safe last status', 27, 'view_safelaststatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (110, 'Can add indexing status', 28, 'add_indexingstatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (111, 'Can change indexing status', 28, 'change_indexingstatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (112, 'Can delete indexing status', 28, 'delete_indexingstatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (113, 'Can view indexing status', 28, 'view_indexingstatus');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (114, 'Can add Firebase Device', 29, 'add_firebasedevice');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (115, 'Can change Firebase Device', 29, 'change_firebasedevice');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (116, 'Can delete Firebase Device', 29, 'delete_firebasedevice');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (117, 'Can view Firebase Device', 29, 'view_firebasedevice');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (118, 'Can add Firebase Device Owner', 30, 'add_firebasedeviceowner');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (119, 'Can change Firebase Device Owner', 30, 'change_firebasedeviceowner');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (120, 'Can delete Firebase Device Owner', 30, 'delete_firebasedeviceowner');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (121, 'Can view Firebase Device Owner', 30, 'view_firebasedeviceowner');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (122, 'Can add safe message', 31, 'add_safemessage');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (123, 'Can change safe message', 31, 'change_safemessage');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (124, 'Can delete safe message', 31, 'delete_safemessage');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (125, 'Can view safe message', 31, 'view_safemessage');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (126, 'Can add safe message confirmation', 32, 'add_safemessageconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (127, 'Can change safe message confirmation', 32, 'change_safemessageconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (128, 'Can delete safe message confirmation', 32, 'delete_safemessageconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (129, 'Can view safe message confirmation', 32, 'view_safemessageconfirmation');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (130, 'Can add token', 33, 'add_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (131, 'Can change token', 33, 'change_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (132, 'Can delete token', 33, 'delete_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (133, 'Can view token', 33, 'view_token');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (134, 'Can add crontab', 34, 'add_crontabschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (135, 'Can change crontab', 34, 'change_crontabschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (136, 'Can delete crontab', 34, 'delete_crontabschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (137, 'Can view crontab', 34, 'view_crontabschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (138, 'Can add interval', 35, 'add_intervalschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (139, 'Can change interval', 35, 'change_intervalschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (140, 'Can delete interval', 35, 'delete_intervalschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (141, 'Can view interval', 35, 'view_intervalschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (142, 'Can add periodic task', 36, 'add_periodictask');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (143, 'Can change periodic task', 36, 'change_periodictask');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (144, 'Can delete periodic task', 36, 'delete_periodictask');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (145, 'Can view periodic task', 36, 'view_periodictask');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (146, 'Can add periodic tasks', 37, 'add_periodictasks');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (147, 'Can change periodic tasks', 37, 'change_periodictasks');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (148, 'Can delete periodic tasks', 37, 'delete_periodictasks');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (149, 'Can view periodic tasks', 37, 'view_periodictasks');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (150, 'Can add solar event', 38, 'add_solarschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (151, 'Can change solar event', 38, 'change_solarschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (152, 'Can delete solar event', 38, 'delete_solarschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (153, 'Can view solar event', 38, 'view_solarschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (154, 'Can add clocked', 39, 'add_clockedschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (155, 'Can change clocked', 39, 'change_clockedschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (156, 'Can delete clocked', 39, 'delete_clockedschedule');
INSERT INTO public.auth_permission (id, name, content_type_id, codename) VALUES (157, 'Can view clocked', 39, 'view_clockedschedule');


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: authtoken_token; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: contracts_contract; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: contracts_contractabi; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: django_celery_beat_clockedschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: django_celery_beat_crontabschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_celery_beat_crontabschedule (id, minute, hour, day_of_week, day_of_month, month_of_year, timezone) VALUES (1, '0', '4', '*', '*', '*', 'UTC');


--
-- Data for Name: django_celery_beat_intervalschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (1, 3, 'minutes');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (2, 10, 'minutes');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (3, 5, 'seconds');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (4, 15, 'seconds');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (5, 14, 'seconds');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (6, 110, 'minutes');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (7, 20, 'minutes');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (8, 1, 'hours');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (9, 6, 'hours');
INSERT INTO public.django_celery_beat_intervalschedule (id, every, period) VALUES (10, 7, 'days');


--
-- Data for Name: django_celery_beat_periodictask; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (1, 'celery.backend_cleanup', 'celery.backend_cleanup', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:26.573485+00', '', 1, NULL, NULL, false, NULL, NULL, '{}', NULL, 43200);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (2, 'Check Reorgs', 'safe_transaction_service.history.tasks.check_reorgs_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.711862+00', '', NULL, 1, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (3, 'Check Sync status', 'safe_transaction_service.history.tasks.check_sync_status_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.726775+00', '', NULL, 2, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (4, 'Index Internal Txs', 'safe_transaction_service.history.tasks.index_internal_txs_task', '[]', '{}', NULL, NULL, NULL, NULL, false, NULL, 0, '2023-06-22 09:58:28.739863+00', '', NULL, 3, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (5, 'Index Safe events (L2)', 'safe_transaction_service.history.tasks.index_safe_events_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.746588+00', '', NULL, 3, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (6, 'Index new Proxies', 'safe_transaction_service.history.tasks.index_new_proxies_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.757298+00', '', NULL, 4, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (7, 'Index ERC20/721 Events', 'safe_transaction_service.history.tasks.index_erc20_events_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.771495+00', '', NULL, 5, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (8, 'Reindex master copies for the last hours', 'safe_transaction_service.history.tasks.reindex_last_hours_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.793512+00', '', NULL, 6, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (9, 'Process Internal Txs', 'safe_transaction_service.history.tasks.process_decoded_internal_txs_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.806227+00', '', NULL, 7, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (10, 'Index contract names and ABIs', 'safe_transaction_service.contracts.tasks.create_missing_contracts_with_metadata_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.817869+00', '', NULL, 8, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (11, 'Index contract names and ABIs from MultiSend transactions', 'safe_transaction_service.contracts.tasks.create_missing_multisend_contracts_with_metadata_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.83068+00', '', NULL, 9, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (12, 'Reindex contracts with missing names or ABIs', 'safe_transaction_service.contracts.tasks.reindex_contracts_without_metadata_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.842342+00', '', NULL, 10, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (13, 'Fix Pool Token Names', 'safe_transaction_service.tokens.tasks.fix_pool_tokens_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.853001+00', '', NULL, 8, NULL, false, NULL, NULL, '{}', NULL, NULL);
INSERT INTO public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) VALUES (14, 'Run query to get number of transactions grouped by safe-app', 'safe_transaction_service.analytics.tasks.get_transactions_per_safe_app_task', '[]', '{}', NULL, NULL, NULL, NULL, true, NULL, 0, '2023-06-22 09:58:28.867138+00', '', NULL, 10, NULL, false, NULL, NULL, '{}', NULL, NULL);


--
-- Data for Name: django_celery_beat_periodictasks; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_celery_beat_periodictasks (ident, last_update) VALUES (1, '2023-06-22 09:58:28.867811+00');


--
-- Data for Name: django_celery_beat_solarschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_content_type (id, app_label, model) VALUES (1, 'admin', 'logentry');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (2, 'auth', 'permission');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (3, 'auth', 'group');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (4, 'auth', 'user');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (5, 'contenttypes', 'contenttype');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (6, 'sessions', 'session');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (7, 'sites', 'site');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (8, 'authtoken', 'token');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (9, 'authtoken', 'tokenproxy');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (10, 'contracts', 'contractabi');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (11, 'contracts', 'contract');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (12, 'history', 'multisigtransaction');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (13, 'history', 'multisigconfirmation');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (14, 'history', 'ethereumblock');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (15, 'history', 'ethereumtx');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (16, 'history', 'internaltx');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (17, 'history', 'proxyfactory');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (18, 'history', 'safemastercopy');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (19, 'history', 'internaltxdecoded');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (20, 'history', 'safecontract');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (21, 'history', 'safestatus');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (22, 'history', 'webhook');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (23, 'history', 'moduletransaction');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (24, 'history', 'safecontractdelegate');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (25, 'history', 'erc20transfer');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (26, 'history', 'erc721transfer');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (27, 'history', 'safelaststatus');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (28, 'history', 'indexingstatus');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (29, 'notifications', 'firebasedevice');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (30, 'notifications', 'firebasedeviceowner');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (31, 'safe_messages', 'safemessage');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (32, 'safe_messages', 'safemessageconfirmation');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (33, 'tokens', 'token');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (34, 'django_celery_beat', 'crontabschedule');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (35, 'django_celery_beat', 'intervalschedule');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (36, 'django_celery_beat', 'periodictask');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (37, 'django_celery_beat', 'periodictasks');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (38, 'django_celery_beat', 'solarschedule');
INSERT INTO public.django_content_type (id, app_label, model) VALUES (39, 'django_celery_beat', 'clockedschedule');


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_migrations (id, app, name, applied) VALUES (1, 'contenttypes', '0001_initial', '2023-06-22 09:58:18.919424+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (2, 'auth', '0001_initial', '2023-06-22 09:58:19.045386+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (3, 'admin', '0001_initial', '2023-06-22 09:58:19.089406+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (4, 'admin', '0002_logentry_remove_auto_add', '2023-06-22 09:58:19.107328+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (5, 'admin', '0003_logentry_add_action_flag_choices', '2023-06-22 09:58:19.125044+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (6, 'contenttypes', '0002_remove_content_type_name', '2023-06-22 09:58:19.159439+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (7, 'auth', '0002_alter_permission_name_max_length', '2023-06-22 09:58:19.175916+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (8, 'auth', '0003_alter_user_email_max_length', '2023-06-22 09:58:19.200431+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (9, 'auth', '0004_alter_user_username_opts', '2023-06-22 09:58:19.219113+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (10, 'auth', '0005_alter_user_last_login_null', '2023-06-22 09:58:19.24612+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (11, 'auth', '0006_require_contenttypes_0002', '2023-06-22 09:58:19.249058+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (12, 'auth', '0007_alter_validators_add_error_messages', '2023-06-22 09:58:19.26321+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (13, 'auth', '0008_alter_user_username_max_length', '2023-06-22 09:58:19.283685+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (14, 'auth', '0009_alter_user_last_name_max_length', '2023-06-22 09:58:19.297015+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (15, 'auth', '0010_alter_group_name_max_length', '2023-06-22 09:58:19.316294+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (16, 'auth', '0011_update_proxy_permissions', '2023-06-22 09:58:19.33061+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (17, 'auth', '0012_alter_user_first_name_max_length', '2023-06-22 09:58:19.344521+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (18, 'authtoken', '0001_initial', '2023-06-22 09:58:19.379879+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (19, 'authtoken', '0002_auto_20160226_1747', '2023-06-22 09:58:19.426677+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (20, 'authtoken', '0003_tokenproxy', '2023-06-22 09:58:19.435688+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (21, 'contracts', '0001_initial', '2023-06-22 09:58:19.464083+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (22, 'contracts', '0002_auto_20210119_1136', '2023-06-22 09:58:19.475829+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (23, 'contracts', '0003_auto_20210122_1352', '2023-06-22 09:58:19.482855+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (24, 'contracts', '0004_auto_20210125_0925', '2023-06-22 09:58:19.487959+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (25, 'contracts', '0005_alter_contractabi_id', '2023-06-22 09:58:19.555632+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (26, 'contracts', '0006_contractabi_abi_hash', '2023-06-22 09:58:19.588799+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (27, 'contracts', '0007_contract_trusted_for_delegate_call', '2023-06-22 09:58:19.609093+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (28, 'contracts', '0008_ethereum_address_field_v2', '2023-06-22 09:58:19.634681+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (29, 'contracts', '0009_alter_contractabi_abi_hash', '2023-06-22 09:58:19.655298+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (30, 'contracts', '0010_alter_contract_logo', '2023-06-22 09:58:19.664084+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (31, 'django_celery_beat', '0001_initial', '2023-06-22 09:58:19.721489+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (32, 'django_celery_beat', '0002_auto_20161118_0346', '2023-06-22 09:58:19.742134+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (33, 'django_celery_beat', '0003_auto_20161209_0049', '2023-06-22 09:58:19.753992+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (34, 'django_celery_beat', '0004_auto_20170221_0000', '2023-06-22 09:58:19.759094+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (35, 'django_celery_beat', '0005_add_solarschedule_events_choices', '2023-06-22 09:58:19.767762+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (36, 'django_celery_beat', '0006_auto_20180322_0932', '2023-06-22 09:58:19.799279+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (37, 'django_celery_beat', '0007_auto_20180521_0826', '2023-06-22 09:58:19.814572+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (38, 'django_celery_beat', '0008_auto_20180914_1922', '2023-06-22 09:58:19.840927+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (39, 'django_celery_beat', '0006_auto_20180210_1226', '2023-06-22 09:58:19.859977+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (40, 'django_celery_beat', '0006_periodictask_priority', '2023-06-22 09:58:19.871101+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (41, 'django_celery_beat', '0009_periodictask_headers', '2023-06-22 09:58:19.881334+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (42, 'django_celery_beat', '0010_auto_20190429_0326', '2023-06-22 09:58:19.985454+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (43, 'django_celery_beat', '0011_auto_20190508_0153', '2023-06-22 09:58:20.006671+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (44, 'django_celery_beat', '0012_periodictask_expire_seconds', '2023-06-22 09:58:20.014801+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (45, 'django_celery_beat', '0013_auto_20200609_0727', '2023-06-22 09:58:20.022511+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (46, 'django_celery_beat', '0014_remove_clockedschedule_enabled', '2023-06-22 09:58:20.028313+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (47, 'django_celery_beat', '0015_edit_solarschedule_events_choices', '2023-06-22 09:58:20.039439+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (48, 'django_celery_beat', '0016_alter_crontabschedule_timezone', '2023-06-22 09:58:20.046882+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (49, 'history', '0001_initial', '2023-06-22 09:58:20.081091+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (50, 'history', '0002_auto_20190725_0857', '2023-06-22 09:58:20.101169+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (51, 'history', '0003_auto_20191107_1459', '2023-06-22 09:58:20.431984+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (52, 'history', '0004_auto_20191118_1001', '2023-06-22 09:58:20.455607+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (53, 'history', '0005_multisigtransaction_failed', '2023-06-22 09:58:20.784023+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (54, 'history', '0006_auto_20200113_1204', '2023-06-22 09:58:20.817169+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (55, 'history', '0007_auto_20200122_1305', '2023-06-22 09:58:20.848738+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (56, 'history', '0008_ethereumtx_logs', '2023-06-22 09:58:20.858329+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (57, 'history', '0009_multisigtransaction_origin', '2023-06-22 09:58:20.878183+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (58, 'history', '0010_auto_20200226_1508', '2023-06-22 09:58:21.016409+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (59, 'history', '0011_auto_20200303_0956', '2023-06-22 09:58:21.031297+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (60, 'history', '0012_moduletransaction', '2023-06-22 09:58:21.072527+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (61, 'history', '0013_multisigtransaction_fix_failed', '2023-06-22 09:58:21.094484+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (62, 'history', '0014_auto_20200327_0954', '2023-06-22 09:58:21.155837+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (63, 'history', '0015_auto_20200327_1233', '2023-06-22 09:58:21.199792+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (64, 'history', '0016_multisigconfirmation_signature_type', '2023-06-22 09:58:21.237754+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (65, 'history', '0017_safecontractdelegate', '2023-06-22 09:58:21.264467+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (66, 'history', '0018_multisigtransaction_trusted', '2023-06-22 09:58:21.301902+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (67, 'history', '0019_transactions_data_none', '2023-06-22 09:58:21.33352+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (68, 'history', '0020_safemastercopy_version', '2023-06-22 09:58:21.339285+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (69, 'history', '0021_moduletransaction_failed', '2023-06-22 09:58:21.374955+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (70, 'history', '0022_auto_20200903_1045', '2023-06-22 09:58:21.384881+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (71, 'history', '0023_auto_20200924_0841', '2023-06-22 09:58:21.394057+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (72, 'history', '0024_auto_20201014_1523', '2023-06-22 09:58:21.403118+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (73, 'history', '0025_auto_20201015_1147', '2023-06-22 09:58:21.429917+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (74, 'history', '0026_auto_20201030_1355', '2023-06-22 09:58:21.439621+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (75, 'history', '0027_remove_errored_internal_txs_20201112_1547', '2023-06-22 09:58:21.461867+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (76, 'history', '0028_auto_20201112_1613', '2023-06-22 09:58:21.480827+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (77, 'history', '0029_auto_20201118_1015', '2023-06-22 09:58:21.499558+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (78, 'history', '0030_auto_20210203_1541', '2023-06-22 09:58:21.508116+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (79, 'history', '0031_webhook_new_safe', '2023-06-22 09:58:21.513703+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (80, 'history', '0032_webhook_new_module_transaction', '2023-06-22 09:58:21.519674+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (81, 'history', '0033_auto_20210318_1654', '2023-06-22 09:58:21.542171+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (82, 'history', '0034_webhook_new_outgoing_transaction', '2023-06-22 09:58:21.548395+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (83, 'history', '0035_safemastercopy_deployer', '2023-06-22 09:58:21.554222+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (84, 'history', '0036_fix_exec_from_module', '2023-06-22 09:58:21.579954+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (85, 'history', '0037_fix_failed_module_transactions', '2023-06-22 09:58:21.605056+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (86, 'history', '0038_safestatus_guard', '2023-06-22 09:58:21.613946+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (87, 'history', '0039_safel2mastercopy_20210519', '2023-06-22 09:58:21.636391+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (88, 'history', '0040_auto_20210607_1007', '2023-06-22 09:58:21.91073+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (89, 'history', '0041_auto_20210729_0916', '2023-06-22 09:58:21.958948+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (90, 'history', '0042_safestatus_history_saf_address_1c362b_idx', '2023-06-22 09:58:21.97146+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (91, 'history', '0043_auto_20210927_1515', '2023-06-22 09:58:22.004138+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (92, 'history', '0044_reprocess_module_txs', '2023-06-22 09:58:22.034333+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (93, 'history', '0045_erc20transfer_erc721transfer', '2023-06-22 09:58:22.123197+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (94, 'history', '0046_delete_ethereumevent', '2023-06-22 09:58:22.135075+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (95, 'history', '0047_auto_20211102_1659', '2023-06-22 09:58:22.195776+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (96, 'history', '0048_block_number_token_transfers_20211126_1443', '2023-06-22 09:58:22.473303+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (97, 'history', '0049_block_number_internaltx_20211129_1111', '2023-06-22 09:58:22.620497+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (98, 'history', '0050_ethereum_address_field_v2_20211201_1507', '2023-06-22 09:58:23.958154+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (99, 'history', '0051_ethereum_address_field_v2_update', '2023-06-22 09:58:23.998893+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (100, 'history', '0052_keccak256_field_20211209_1628', '2023-06-22 09:58:24.511866+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (101, 'history', '0053_alter_webhook_address', '2023-06-22 09:58:24.524125+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (102, 'history', '0054_webhook_authorization', '2023-06-22 09:58:24.529622+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (103, 'history', '0055_alter_multisigtransaction_options', '2023-06-22 09:58:24.540035+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (104, 'history', '0056_alter_multisigconfirmation_signature', '2023-06-22 09:58:24.551552+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (105, 'history', '0057_alter_webhook_authorization', '2023-06-22 09:58:24.557681+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (106, 'history', '0058_alter_webhook_url', '2023-06-22 09:58:24.5642+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (107, 'history', '0059_auto_20220408_1020', '2023-06-22 09:58:24.584351+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (108, 'history', '0060_add_eip1559_fields_20220419_0955', '2023-06-22 09:58:24.615783+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (109, 'history', '0061_alter_internaltx_block_number', '2023-06-22 09:58:24.630527+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (110, 'history', '0062_add_safe_last_status_20220429_0922', '2023-06-22 09:58:24.710785+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (111, 'history', '0063_alter_internaltx__from', '2023-06-22 09:58:24.748109+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (112, 'history', '0064_auto_20220523_0919', '2023-06-22 09:58:24.770163+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (113, 'history', '0065_safelaststatus_history_saf_enabled_020fea_gin', '2023-06-22 09:58:24.785437+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (114, 'history', '0066_auto_20220628_1125', '2023-06-22 09:58:24.839441+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (115, 'history', '0067_auto_20220705_1545', '2023-06-22 09:58:24.920526+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (116, 'history', '0068_alter_multisigtransaction_origin', '2023-06-22 09:58:25.002439+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (117, 'history', '0069_indexingstatus_and_more', '2023-06-22 09:58:25.094341+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (118, 'notifications', '0001_initial', '2023-06-22 09:58:25.143745+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (119, 'notifications', '0002_auto_20200806_1534', '2023-06-22 09:58:25.152326+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (120, 'notifications', '0003_firebasedeviceowner', '2023-06-22 09:58:25.186076+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (121, 'notifications', '0004_alter_firebasedeviceowner_id', '2023-06-22 09:58:25.208786+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (122, 'notifications', '0005_ethereum_address_field_v2', '2023-06-22 09:58:25.274546+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (123, 'safe_messages', '0001_initial', '2023-06-22 09:58:25.32501+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (124, 'sessions', '0001_initial', '2023-06-22 09:58:25.35831+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (125, 'sites', '0001_initial', '2023-06-22 09:58:25.380594+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (126, 'sites', '0002_alter_domain_unique', '2023-06-22 09:58:25.393577+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (127, 'tokens', '0001_initial', '2023-06-22 09:58:25.411949+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (128, 'tokens', '0002_auto_20200903_1045', '2023-06-22 09:58:25.673634+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (129, 'tokens', '0003_auto_20201222_1053', '2023-06-22 09:58:25.708847+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (130, 'tokens', '0004_ethereum_address_field_v2_20211201_1512', '2023-06-22 09:58:25.746901+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (131, 'tokens', '0005_add_logo_file_20220201_1335', '2023-06-22 09:58:25.760216+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (132, 'tokens', '0006_auto_20220214_1629', '2023-06-22 09:58:25.779944+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (133, 'tokens', '0007_alter_token_logo', '2023-06-22 09:58:25.79017+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (134, 'tokens', '0008_alter_token_copy_price', '2023-06-22 09:58:25.798005+00');
INSERT INTO public.django_migrations (id, app, name, applied) VALUES (135, 'tokens', '0009_token_token_spam_idx', '2023-06-22 09:58:25.808837+00');


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: django_site; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.django_site (id, domain, name) VALUES (1, 'example.com', 'example.com');


--
-- Data for Name: history_erc20transfer; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_erc721transfer; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_ethereumblock; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_ethereumtx; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_indexingstatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.history_indexingstatus (indexing_type, block_number) VALUES (0, 0);


--
-- Data for Name: history_internaltx; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_internaltxdecoded; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_moduletransaction; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_multisigconfirmation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_multisigtransaction; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_proxyfactory; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.history_proxyfactory (address, initial_block_number, tx_block_number) VALUES ('\xa6b71e26c5e0845f74c812102ca7114b6a896ab2', 0, 0);


--
-- Data for Name: history_safecontract; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_safecontractdelegate; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_safelaststatus; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: history_safemastercopy; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.history_safemastercopy (address, initial_block_number, tx_block_number, version, deployer, l2) VALUES ('\x3e5c63644e683549055b9be8653de26e0b4cd36e', 0, 0, '1.3.0+L2', 'Gnosis', true);


--
-- Data for Name: history_safestatus; Type: TABLE DATA; Schema: public; Owner: postgres
--




--
-- Data for Name: history_webhook; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: notifications_firebasedevice; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: notifications_firebasedevice_safes; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: notifications_firebasedeviceowner; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: safe_messages_safemessage; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: safe_messages_safemessageconfirmation; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: tokens_token; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 157, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, false);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: contracts_contractabi_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contracts_contractabi_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_celery_beat_clockedschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_clockedschedule_id_seq', 1, false);


--
-- Name: django_celery_beat_crontabschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_crontabschedule_id_seq', 1, true);


--
-- Name: django_celery_beat_intervalschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_intervalschedule_id_seq', 10, true);


--
-- Name: django_celery_beat_periodictask_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_periodictask_id_seq', 14, true);


--
-- Name: django_celery_beat_solarschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_solarschedule_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 39, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 135, true);


--
-- Name: django_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_site_id_seq', 1, true);


--
-- Name: history_erc20transfer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_erc20transfer_id_seq', 1, false);


--
-- Name: history_erc721transfer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_erc721transfer_id_seq', 1, false);


--
-- Name: history_internaltx_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_internaltx_id_seq', 1, false);


--
-- Name: history_multisigconfirmation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_multisigconfirmation_id_seq', 1, false);


--
-- Name: history_safecontractdelegate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_safecontractdelegate_id_seq', 1, false);


--
-- Name: history_webhook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.history_webhook_id_seq', 1, false);


--
-- Name: notifications_firebasedevice_safes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notifications_firebasedevice_safes_id_seq', 1, false);


--
-- Name: notifications_firebasedeviceowner_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notifications_firebasedeviceowner_id_seq', 1, false);


--
-- Name: safe_messages_safemessageconfirmation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.safe_messages_safemessageconfirmation_id_seq', 1, false);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: authtoken_token authtoken_token_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_pkey PRIMARY KEY (key);


--
-- Name: authtoken_token authtoken_token_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id);


--
-- Name: contracts_contract contracts_contract_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts_contract
    ADD CONSTRAINT contracts_contract_pkey PRIMARY KEY (address);


--
-- Name: contracts_contractabi contracts_contractabi_abi_hash_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts_contractabi
    ADD CONSTRAINT contracts_contractabi_abi_hash_key UNIQUE (abi_hash);


--
-- Name: contracts_contractabi contracts_contractabi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts_contractabi
    ADD CONSTRAINT contracts_contractabi_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_clockedschedule django_celery_beat_clockedschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_clockedschedule
    ADD CONSTRAINT django_celery_beat_clockedschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_crontabschedule django_celery_beat_crontabschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_crontabschedule
    ADD CONSTRAINT django_celery_beat_crontabschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_intervalschedule django_celery_beat_intervalschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_intervalschedule
    ADD CONSTRAINT django_celery_beat_intervalschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_periodictask django_celery_beat_periodictask_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_periodictask_name_key UNIQUE (name);


--
-- Name: django_celery_beat_periodictask django_celery_beat_periodictask_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_periodictask_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_periodictasks django_celery_beat_periodictasks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictasks
    ADD CONSTRAINT django_celery_beat_periodictasks_pkey PRIMARY KEY (ident);


--
-- Name: django_celery_beat_solarschedule django_celery_beat_solar_event_latitude_longitude_ba64999a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_solarschedule
    ADD CONSTRAINT django_celery_beat_solar_event_latitude_longitude_ba64999a_uniq UNIQUE (event, latitude, longitude);


--
-- Name: django_celery_beat_solarschedule django_celery_beat_solarschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_solarschedule
    ADD CONSTRAINT django_celery_beat_solarschedule_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site django_site_domain_a2e37b91_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_domain_a2e37b91_uniq UNIQUE (domain);


--
-- Name: django_site django_site_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: history_erc20transfer history_erc20transfer_ethereum_tx_id_log_index_c6789789_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc20transfer
    ADD CONSTRAINT history_erc20transfer_ethereum_tx_id_log_index_c6789789_uniq UNIQUE (ethereum_tx_id, log_index);


--
-- Name: history_erc20transfer history_erc20transfer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc20transfer
    ADD CONSTRAINT history_erc20transfer_pkey PRIMARY KEY (id);


--
-- Name: history_erc721transfer history_erc721transfer_ethereum_tx_id_log_index_a874445d_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc721transfer
    ADD CONSTRAINT history_erc721transfer_ethereum_tx_id_log_index_a874445d_uniq UNIQUE (ethereum_tx_id, log_index);


--
-- Name: history_erc721transfer history_erc721transfer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc721transfer
    ADD CONSTRAINT history_erc721transfer_pkey PRIMARY KEY (id);


--
-- Name: history_ethereumblock history_ethereumblock_block_hash_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_ethereumblock
    ADD CONSTRAINT history_ethereumblock_block_hash_key UNIQUE (block_hash);


--
-- Name: history_ethereumblock history_ethereumblock_parent_hash_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_ethereumblock
    ADD CONSTRAINT history_ethereumblock_parent_hash_key UNIQUE (parent_hash);


--
-- Name: history_ethereumblock history_ethereumblock_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_ethereumblock
    ADD CONSTRAINT history_ethereumblock_pkey PRIMARY KEY (number);


--
-- Name: history_ethereumtx history_ethereumtx_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_ethereumtx
    ADD CONSTRAINT history_ethereumtx_pkey PRIMARY KEY (tx_hash);


--
-- Name: history_indexingstatus history_indexingstatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_indexingstatus
    ADD CONSTRAINT history_indexingstatus_pkey PRIMARY KEY (indexing_type);


--
-- Name: history_internaltx history_internaltx_ethereum_tx_id_trace_address_c7c2fa9c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_internaltx
    ADD CONSTRAINT history_internaltx_ethereum_tx_id_trace_address_c7c2fa9c_uniq UNIQUE (ethereum_tx_id, trace_address);


--
-- Name: history_internaltx history_internaltx_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_internaltx
    ADD CONSTRAINT history_internaltx_pkey PRIMARY KEY (id);


--
-- Name: history_internaltxdecoded history_internaltxdecoded_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_internaltxdecoded
    ADD CONSTRAINT history_internaltxdecoded_pkey PRIMARY KEY (internal_tx_id);


--
-- Name: history_moduletransaction history_moduletransaction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_moduletransaction
    ADD CONSTRAINT history_moduletransaction_pkey PRIMARY KEY (internal_tx_id);


--
-- Name: history_multisigconfirmation history_multisigconfirma_multisig_transaction_has_f98adf7b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigconfirmation
    ADD CONSTRAINT history_multisigconfirma_multisig_transaction_has_f98adf7b_uniq UNIQUE (multisig_transaction_hash, owner);


--
-- Name: history_multisigconfirmation history_multisigconfirmation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigconfirmation
    ADD CONSTRAINT history_multisigconfirmation_pkey PRIMARY KEY (id);


--
-- Name: history_multisigtransaction history_multisigtransaction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigtransaction
    ADD CONSTRAINT history_multisigtransaction_pkey PRIMARY KEY (safe_tx_hash);


--
-- Name: history_proxyfactory history_proxyfactory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_proxyfactory
    ADD CONSTRAINT history_proxyfactory_pkey PRIMARY KEY (address);


--
-- Name: history_safecontract history_safecontract_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safecontract
    ADD CONSTRAINT history_safecontract_pkey PRIMARY KEY (address);


--
-- Name: history_safecontractdelegate history_safecontractdele_safe_contract_id_delegat_5fd0067a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safecontractdelegate
    ADD CONSTRAINT history_safecontractdele_safe_contract_id_delegat_5fd0067a_uniq UNIQUE (safe_contract_id, delegate, delegator);


--
-- Name: history_safecontractdelegate history_safecontractdelegate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safecontractdelegate
    ADD CONSTRAINT history_safecontractdelegate_pkey PRIMARY KEY (id);


--
-- Name: history_safelaststatus history_safelaststatus_internal_tx_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safelaststatus
    ADD CONSTRAINT history_safelaststatus_internal_tx_id_key UNIQUE (internal_tx_id);


--
-- Name: history_safelaststatus history_safelaststatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safelaststatus
    ADD CONSTRAINT history_safelaststatus_pkey PRIMARY KEY (address);


--
-- Name: history_safemastercopy history_safemastercopy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safemastercopy
    ADD CONSTRAINT history_safemastercopy_pkey PRIMARY KEY (address);


--
-- Name: history_safestatus history_safestatus_internal_tx_id_address_14c99a89_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safestatus
    ADD CONSTRAINT history_safestatus_internal_tx_id_address_14c99a89_uniq UNIQUE (internal_tx_id, address);


--
-- Name: history_safestatus history_safestatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safestatus
    ADD CONSTRAINT history_safestatus_pkey PRIMARY KEY (internal_tx_id);


--
-- Name: history_webhook history_webhook_address_url_5d78af21_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_webhook
    ADD CONSTRAINT history_webhook_address_url_5d78af21_uniq UNIQUE (address, url);


--
-- Name: history_webhook history_webhook_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_webhook
    ADD CONSTRAINT history_webhook_pkey PRIMARY KEY (id);


--
-- Name: notifications_firebasedeviceowner notifications_firebasede_firebase_device_id_owner_74fe4cd9_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedeviceowner
    ADD CONSTRAINT notifications_firebasede_firebase_device_id_owner_74fe4cd9_uniq UNIQUE (firebase_device_id, owner);


--
-- Name: notifications_firebasedevice_safes notifications_firebasede_firebasedevice_id_safeco_980226aa_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice_safes
    ADD CONSTRAINT notifications_firebasede_firebasedevice_id_safeco_980226aa_uniq UNIQUE (firebasedevice_id, safecontract_id);


--
-- Name: notifications_firebasedevice notifications_firebasedevice_cloud_messaging_token_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice
    ADD CONSTRAINT notifications_firebasedevice_cloud_messaging_token_key UNIQUE (cloud_messaging_token);


--
-- Name: notifications_firebasedevice notifications_firebasedevice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice
    ADD CONSTRAINT notifications_firebasedevice_pkey PRIMARY KEY (uuid);


--
-- Name: notifications_firebasedevice_safes notifications_firebasedevice_safes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice_safes
    ADD CONSTRAINT notifications_firebasedevice_safes_pkey PRIMARY KEY (id);


--
-- Name: notifications_firebasedeviceowner notifications_firebasedeviceowner_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedeviceowner
    ADD CONSTRAINT notifications_firebasedeviceowner_pkey PRIMARY KEY (id);


--
-- Name: safe_messages_safemessageconfirmation safe_messages_safemessag_safe_message_id_owner_ce8adc27_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.safe_messages_safemessageconfirmation
    ADD CONSTRAINT safe_messages_safemessag_safe_message_id_owner_ce8adc27_uniq UNIQUE (safe_message_id, owner);


--
-- Name: safe_messages_safemessage safe_messages_safemessage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.safe_messages_safemessage
    ADD CONSTRAINT safe_messages_safemessage_pkey PRIMARY KEY (message_hash);


--
-- Name: safe_messages_safemessageconfirmation safe_messages_safemessageconfirmation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.safe_messages_safemessageconfirmation
    ADD CONSTRAINT safe_messages_safemessageconfirmation_pkey PRIMARY KEY (id);


--
-- Name: tokens_token tokens_token_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tokens_token
    ADD CONSTRAINT tokens_token_pkey PRIMARY KEY (address);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: authtoken_token_key_10f0b77e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX authtoken_token_key_10f0b77e_like ON public.authtoken_token USING btree (key varchar_pattern_ops);


--
-- Name: contracts_contract_contract_abi_id_1c37b4bd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contracts_contract_contract_abi_id_1c37b4bd ON public.contracts_contract USING btree (contract_abi_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_celery_beat_periodictask_clocked_id_47a69f82; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_clocked_id_47a69f82 ON public.django_celery_beat_periodictask USING btree (clocked_id);


--
-- Name: django_celery_beat_periodictask_crontab_id_d3cba168; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_crontab_id_d3cba168 ON public.django_celery_beat_periodictask USING btree (crontab_id);


--
-- Name: django_celery_beat_periodictask_interval_id_a8ca27da; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_interval_id_a8ca27da ON public.django_celery_beat_periodictask USING btree (interval_id);


--
-- Name: django_celery_beat_periodictask_name_265a36b7_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_name_265a36b7_like ON public.django_celery_beat_periodictask USING btree (name varchar_pattern_ops);


--
-- Name: django_celery_beat_periodictask_solar_id_a87ce72c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_solar_id_a87ce72c ON public.django_celery_beat_periodictask USING btree (solar_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: django_site_domain_a2e37b91_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_site_domain_a2e37b91_like ON public.django_site USING btree (domain varchar_pattern_ops);


--
-- Name: history_decoded_processed_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_decoded_processed_idx ON public.history_internaltxdecoded USING btree (processed) WHERE (NOT processed);


--
-- Name: history_erc20transfer_ethereum_tx_id_16a6036b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc20transfer_ethereum_tx_id_16a6036b ON public.history_erc20transfer USING btree (ethereum_tx_id);


--
-- Name: history_erc20transfer_timestamp_b14c5ef4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc20transfer_timestamp_b14c5ef4 ON public.history_erc20transfer USING btree ("timestamp");


--
-- Name: history_erc721transfer_ethereum_tx_id_aa020110; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc721transfer_ethereum_tx_id_aa020110 ON public.history_erc721transfer USING btree (ethereum_tx_id);


--
-- Name: history_erc721transfer_timestamp_aaadcf46; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc721transfer_timestamp_aaadcf46 ON public.history_erc721transfer USING btree ("timestamp");


--
-- Name: history_erc__from_64986c_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc__from_64986c_idx ON public.history_erc20transfer USING btree (_from, "timestamp");


--
-- Name: history_erc__from_72fb41_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc__from_72fb41_idx ON public.history_erc721transfer USING btree (_from, "timestamp");


--
-- Name: history_erc_address_94cee3_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc_address_94cee3_idx ON public.history_erc721transfer USING btree (address);


--
-- Name: history_erc_address_dba64d_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc_address_dba64d_idx ON public.history_erc20transfer USING btree (address);


--
-- Name: history_erc_to_02d4ab_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc_to_02d4ab_idx ON public.history_erc721transfer USING btree ("to", "timestamp");


--
-- Name: history_erc_to_f32154_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_erc_to_f32154_idx ON public.history_erc20transfer USING btree ("to", "timestamp");


--
-- Name: history_ethereumblock_confirmed_5ca6a779; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_ethereumblock_confirmed_5ca6a779 ON public.history_ethereumblock USING btree (confirmed);


--
-- Name: history_ethereumtx__from_e36d4662; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_ethereumtx__from_e36d4662 ON public.history_ethereumtx USING btree (_from);


--
-- Name: history_ethereumtx_block_id_92e7f70e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_ethereumtx_block_id_92e7f70e ON public.history_ethereumtx USING btree (block_id);


--
-- Name: history_ethereumtx_status_d1d0de2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_ethereumtx_status_d1d0de2c ON public.history_ethereumtx USING btree (status);


--
-- Name: history_ethereumtx_to_9fb37c13; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_ethereumtx_to_9fb37c13 ON public.history_ethereumtx USING btree ("to");


--
-- Name: history_indexingstatus_block_number_40805e1c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_indexingstatus_block_number_40805e1c ON public.history_indexingstatus USING btree (block_number);


--
-- Name: history_int__from_31d634_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_int__from_31d634_idx ON public.history_internaltx USING btree (_from, "timestamp");


--
-- Name: history_int_to_e72886_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_int_to_e72886_idx ON public.history_internaltx USING btree ("to", "timestamp");


--
-- Name: history_internaltx__from_36470cfd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx__from_36470cfd ON public.history_internaltx USING btree (_from);


--
-- Name: history_internaltx_block_number_9004df5f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_block_number_9004df5f ON public.history_internaltx USING btree (block_number);


--
-- Name: history_internaltx_call_type_1f0c4296; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_call_type_1f0c4296 ON public.history_internaltx USING btree (call_type);


--
-- Name: history_internaltx_contract_address_134466b3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_contract_address_134466b3 ON public.history_internaltx USING btree (contract_address);


--
-- Name: history_internaltx_ethereum_tx_id_e6ac35ab; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_ethereum_tx_id_e6ac35ab ON public.history_internaltx USING btree (ethereum_tx_id);


--
-- Name: history_internaltx_refund_address_09530831; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_refund_address_09530831 ON public.history_internaltx USING btree (refund_address);


--
-- Name: history_internaltx_timestamp_ef4d64cb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_timestamp_ef4d64cb ON public.history_internaltx USING btree ("timestamp");


--
-- Name: history_internaltx_tx_type_bb97604e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_tx_type_bb97604e ON public.history_internaltx USING btree (tx_type);


--
-- Name: history_internaltx_value_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltx_value_idx ON public.history_internaltx USING btree (value) WHERE (value > (0)::numeric);


--
-- Name: history_internaltxdecoded_function_name_333ae03e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltxdecoded_function_name_333ae03e ON public.history_internaltxdecoded USING btree (function_name);


--
-- Name: history_internaltxdecoded_function_name_333ae03e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_internaltxdecoded_function_name_333ae03e_like ON public.history_internaltxdecoded USING btree (function_name varchar_pattern_ops);


--
-- Name: history_moduletransaction_module_5bf50dd1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_moduletransaction_module_5bf50dd1 ON public.history_moduletransaction USING btree (module);


--
-- Name: history_moduletransaction_safe_794cf9b4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_moduletransaction_safe_794cf9b4 ON public.history_moduletransaction USING btree (safe);


--
-- Name: history_moduletransaction_to_041e4c7b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_moduletransaction_to_041e4c7b ON public.history_moduletransaction USING btree ("to");


--
-- Name: history_multisigconfirmation_ethereum_tx_id_71e0ab73; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigconfirmation_ethereum_tx_id_71e0ab73 ON public.history_multisigconfirmation USING btree (ethereum_tx_id);


--
-- Name: history_multisigconfirmation_multisig_transaction_hash_4c8cbf7a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigconfirmation_multisig_transaction_hash_4c8cbf7a ON public.history_multisigconfirmation USING btree (multisig_transaction_hash);


--
-- Name: history_multisigconfirmation_multisig_transaction_id_43ec94d5; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigconfirmation_multisig_transaction_id_43ec94d5 ON public.history_multisigconfirmation USING btree (multisig_transaction_id);


--
-- Name: history_multisigconfirmation_signature_type_9679d821; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigconfirmation_signature_type_9679d821 ON public.history_multisigconfirmation USING btree (signature_type);


--
-- Name: history_multisigtransaction_ethereum_tx_id_c8d3f1cf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_ethereum_tx_id_c8d3f1cf ON public.history_multisigtransaction USING btree (ethereum_tx_id);


--
-- Name: history_multisigtransaction_failed_4842ad6b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_failed_4842ad6b ON public.history_multisigtransaction USING btree (failed);


--
-- Name: history_multisigtransaction_nonce_a98eecaa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_nonce_a98eecaa ON public.history_multisigtransaction USING btree (nonce);


--
-- Name: history_multisigtransaction_safe_ba8bae68; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_safe_ba8bae68 ON public.history_multisigtransaction USING btree (safe);


--
-- Name: history_multisigtransaction_to_e544fdbe; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_to_e544fdbe ON public.history_multisigtransaction USING btree ("to");


--
-- Name: history_multisigtransaction_trusted_f8ea7938; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_multisigtransaction_trusted_f8ea7938 ON public.history_multisigtransaction USING btree (trusted);


--
-- Name: history_proxyfactory_tx_block_number_51be6689; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_proxyfactory_tx_block_number_51be6689 ON public.history_proxyfactory USING btree (tx_block_number);


--
-- Name: history_saf_address_1c362b_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_saf_address_1c362b_idx ON public.history_safestatus USING btree (address, nonce DESC, internal_tx_id DESC);


--
-- Name: history_saf_address_aa71bd_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_saf_address_aa71bd_idx ON public.history_safestatus USING btree (address, nonce DESC);


--
-- Name: history_saf_enabled_020fea_gin; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_saf_enabled_020fea_gin ON public.history_safelaststatus USING gin (enabled_modules);


--
-- Name: history_saf_owners_5fc97e_gin; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_saf_owners_5fc97e_gin ON public.history_safelaststatus USING gin (owners);


--
-- Name: history_safecontract_ethereum_tx_id_4f63f583; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_safecontract_ethereum_tx_id_4f63f583 ON public.history_safecontract USING btree (ethereum_tx_id);


--
-- Name: history_safecontractdelegate_safe_contract_id_4389cdbf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_safecontractdelegate_safe_contract_id_4389cdbf ON public.history_safecontractdelegate USING btree (safe_contract_id);


--
-- Name: history_safemastercopy_tx_block_number_c1b3ce4f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_safemastercopy_tx_block_number_c1b3ce4f ON public.history_safemastercopy USING btree (tx_block_number);


--
-- Name: history_safestatus_address_68cd154d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_safestatus_address_68cd154d ON public.history_safestatus USING btree (address);


--
-- Name: history_webhook_address_94c4e540; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX history_webhook_address_94c4e540 ON public.history_webhook USING btree (address);


--
-- Name: notifications_firebasede_cloud_messaging_token_d4feef1d_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notifications_firebasede_cloud_messaging_token_d4feef1d_like ON public.notifications_firebasedevice USING btree (cloud_messaging_token varchar_pattern_ops);


--
-- Name: notifications_firebasedevice_safes_firebasedevice_id_028d88bf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notifications_firebasedevice_safes_firebasedevice_id_028d88bf ON public.notifications_firebasedevice_safes USING btree (firebasedevice_id);


--
-- Name: notifications_firebasedevice_safes_safecontract_id_acb5c418; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notifications_firebasedevice_safes_safecontract_id_acb5c418 ON public.notifications_firebasedevice_safes USING btree (safecontract_id);


--
-- Name: notifications_firebasedeviceowner_firebase_device_id_6e9dd879; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notifications_firebasedeviceowner_firebase_device_id_6e9dd879 ON public.notifications_firebasedeviceowner USING btree (firebase_device_id);


--
-- Name: notifications_firebasedeviceowner_owner_025b0ed6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notifications_firebasedeviceowner_owner_025b0ed6 ON public.notifications_firebasedeviceowner USING btree (owner);


--
-- Name: safe_messages_safemessage_safe_fc7e3fe6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX safe_messages_safemessage_safe_fc7e3fe6 ON public.safe_messages_safemessage USING btree (safe);


--
-- Name: safe_messages_safemessageconfirmation_owner_b930d28f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX safe_messages_safemessageconfirmation_owner_b930d28f ON public.safe_messages_safemessageconfirmation USING btree (owner);


--
-- Name: safe_messages_safemessageconfirmation_safe_message_id_1796dddc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX safe_messages_safemessageconfirmation_safe_message_id_1796dddc ON public.safe_messages_safemessageconfirmation USING btree (safe_message_id);


--
-- Name: safe_messages_safemessageconfirmation_signature_type_34a29b90; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX safe_messages_safemessageconfirmation_signature_type_34a29b90 ON public.safe_messages_safemessageconfirmation USING btree (signature_type);


--
-- Name: token_events_bugged_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX token_events_bugged_idx ON public.tokens_token USING btree (events_bugged) WHERE events_bugged;


--
-- Name: token_spam_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX token_spam_idx ON public.tokens_token USING btree (spam) WHERE spam;


--
-- Name: token_trusted_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX token_trusted_idx ON public.tokens_token USING btree (trusted) WHERE trusted;


--
-- Name: tokens_token_decimals_7c745c31; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tokens_token_decimals_7c745c31 ON public.tokens_token USING btree (decimals);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: authtoken_token authtoken_token_user_id_35299eff_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_35299eff_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contracts_contract contracts_contract_contract_abi_id_1c37b4bd_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts_contract
    ADD CONSTRAINT contracts_contract_contract_abi_id_1c37b4bd_fk FOREIGN KEY (contract_abi_id) REFERENCES public.contracts_contractabi(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_clocked_id_47a69f82_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_clocked_id_47a69f82_fk_django_ce FOREIGN KEY (clocked_id) REFERENCES public.django_celery_beat_clockedschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_crontab_id_d3cba168_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_crontab_id_d3cba168_fk_django_ce FOREIGN KEY (crontab_id) REFERENCES public.django_celery_beat_crontabschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_interval_id_a8ca27da_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_interval_id_a8ca27da_fk_django_ce FOREIGN KEY (interval_id) REFERENCES public.django_celery_beat_intervalschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_solar_id_a87ce72c_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_solar_id_a87ce72c_fk_django_ce FOREIGN KEY (solar_id) REFERENCES public.django_celery_beat_solarschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_erc20transfer history_erc20transfer_ethereum_tx_id_16a6036b_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc20transfer
    ADD CONSTRAINT history_erc20transfer_ethereum_tx_id_16a6036b_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_erc721transfer history_erc721transfer_ethereum_tx_id_aa020110_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_erc721transfer
    ADD CONSTRAINT history_erc721transfer_ethereum_tx_id_aa020110_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_ethereumtx history_ethereumtx_block_id_92e7f70e_fk_history_e; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_ethereumtx
    ADD CONSTRAINT history_ethereumtx_block_id_92e7f70e_fk_history_e FOREIGN KEY (block_id) REFERENCES public.history_ethereumblock(number) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_internaltx history_internaltx_ethereum_tx_id_e6ac35ab_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_internaltx
    ADD CONSTRAINT history_internaltx_ethereum_tx_id_e6ac35ab_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_internaltxdecoded history_internaltxdecoded_internal_tx_id_5b3e37cb_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_internaltxdecoded
    ADD CONSTRAINT history_internaltxdecoded_internal_tx_id_5b3e37cb_fk FOREIGN KEY (internal_tx_id) REFERENCES public.history_internaltx(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_moduletransaction history_moduletransaction_internal_tx_id_9fb53507_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_moduletransaction
    ADD CONSTRAINT history_moduletransaction_internal_tx_id_9fb53507_fk FOREIGN KEY (internal_tx_id) REFERENCES public.history_internaltx(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_multisigconfirmation history_multisigconfirmat_multisig_transaction_id_43ec94d5_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigconfirmation
    ADD CONSTRAINT history_multisigconfirmat_multisig_transaction_id_43ec94d5_fk FOREIGN KEY (multisig_transaction_id) REFERENCES public.history_multisigtransaction(safe_tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_multisigconfirmation history_multisigconfirmation_ethereum_tx_id_71e0ab73_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigconfirmation
    ADD CONSTRAINT history_multisigconfirmation_ethereum_tx_id_71e0ab73_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_multisigtransaction history_multisigtransaction_ethereum_tx_id_c8d3f1cf_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_multisigtransaction
    ADD CONSTRAINT history_multisigtransaction_ethereum_tx_id_c8d3f1cf_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_safecontract history_safecontract_ethereum_tx_id_4f63f583_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safecontract
    ADD CONSTRAINT history_safecontract_ethereum_tx_id_4f63f583_fk FOREIGN KEY (ethereum_tx_id) REFERENCES public.history_ethereumtx(tx_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_safecontractdelegate history_safecontractdelegate_safe_contract_id_4389cdbf_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safecontractdelegate
    ADD CONSTRAINT history_safecontractdelegate_safe_contract_id_4389cdbf_fk FOREIGN KEY (safe_contract_id) REFERENCES public.history_safecontract(address) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_safelaststatus history_safelaststat_internal_tx_id_df2261ee_fk_history_i; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safelaststatus
    ADD CONSTRAINT history_safelaststat_internal_tx_id_df2261ee_fk_history_i FOREIGN KEY (internal_tx_id) REFERENCES public.history_internaltx(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: history_safestatus history_safestatus_internal_tx_id_b447def6_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.history_safestatus
    ADD CONSTRAINT history_safestatus_internal_tx_id_b447def6_fk FOREIGN KEY (internal_tx_id) REFERENCES public.history_internaltx(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: notifications_firebasedeviceowner notifications_fireba_firebase_device_id_6e9dd879_fk_notificat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedeviceowner
    ADD CONSTRAINT notifications_fireba_firebase_device_id_6e9dd879_fk_notificat FOREIGN KEY (firebase_device_id) REFERENCES public.notifications_firebasedevice(uuid) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: notifications_firebasedevice_safes notifications_fireba_firebasedevice_id_028d88bf_fk_notificat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice_safes
    ADD CONSTRAINT notifications_fireba_firebasedevice_id_028d88bf_fk_notificat FOREIGN KEY (firebasedevice_id) REFERENCES public.notifications_firebasedevice(uuid) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: notifications_firebasedevice_safes notifications_fireba_safecontract_id_acb5c418_fk_history_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications_firebasedevice_safes
    ADD CONSTRAINT notifications_fireba_safecontract_id_acb5c418_fk_history_s FOREIGN KEY (safecontract_id) REFERENCES public.history_safecontract(address) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: safe_messages_safemessageconfirmation safe_messages_safeme_safe_message_id_1796dddc_fk_safe_mess; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.safe_messages_safemessageconfirmation
    ADD CONSTRAINT safe_messages_safeme_safe_message_id_1796dddc_fk_safe_mess FOREIGN KEY (safe_message_id) REFERENCES public.safe_messages_safemessage(message_hash) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

